// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in = load, sel = address, a = regin0, b = regin1, c = regin2, d = regin3, e = regin4, f = regin5, g = regin6, h = regin7);
    Register(in = in, load = regin0, out = regout0);
    Register(in = in, load = regin1, out = regout1);
    Register(in = in, load = regin2, out = regout2);
    Register(in = in, load = regin3, out = regout3);
    Register(in = in, load = regin4, out = regout4);
    Register(in = in, load = regin5, out = regout5);
    Register(in = in, load = regin6, out = regout6);
    Register(in = in, load = regin7, out = regout7);
    Mux8Way16(a = regout0, b = regout1, c = regout2, d = regout3, e = regout4, f = regout5, g = regout6, h = regout7, sel = address, out = out);
}
